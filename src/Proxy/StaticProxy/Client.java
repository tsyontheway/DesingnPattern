package Proxy.StaticProxy;

/**
 *          静态代理
 *
 * 静态代理在使用时,需要定义接口或者父类,被代理对象(即目标对象)与代理对象一起实现相同的接口或者是继承相同父类
            静态代理优缺点
 * 1)	优点：在不修改目标对象的功能前提下, 能通过代理对象对目标功能扩展
 * 2)	缺点：因为代理对象需要与目标对象实现一样的接口,所以会有很多代理类
 * 3)	一旦接口增加方法,目标对象与代理对象都要维护
 *
 *           代理模式
 * 1)	代理模式：为一个对象提供一个替身，以控制对这个对象的访问。即通过代理对象访问目标对象.这样做的好处是:可以在目标对象实现的基础上,增强额外的功能操作,即扩展目标对象的功能。
 * 2)	被代理的对象可以是远程对象、创建开销大的对象或需要安全控制的对象
 * 3)	代理模式有不同的形式, 主要有三种 静态代理、动态代理 (JDK 代理、接口代理)和  Cglib 代理  (可以在内存动态的创建对象，而不需要实现接口， 他是属于动态代理的范畴) 。
 */
public class Client {
    public static void main(String[] args) {
        TeacherDao teacherDao = new TeacherDao();

        //创建代理对象, 同时将被代理对象传递给代理对象
        TeacherDaoProxy teacherDaoProxy = new TeacherDaoProxy(teacherDao);

        //通过代理对象，调用到被代理对象的方法
        //即：执行的是代理对象的方法，代理对象再去调用目标对象的方法
        teacherDaoProxy.teach();
    }
}
